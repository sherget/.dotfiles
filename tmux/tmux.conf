## COLORSCHEME: gruvbox dark (customized)
set-option -g status "on"

# default statusbar color
set-option -g status-style bg=colour233,fg=colour15 # bg=bg1, fg=fg1

# default window title colors
set-window-option -g window-status-style bg=colour52,fg=colour233 # bg=yellow, fg=bg1

# default window with an activity alert
set-window-option -g window-status-activity-style bg=colour233,fg=colour248 # bg=bg1, fg=fg3

# active window title colors
set-window-option -g window-status-current-style bg=red,fg=colour233 # fg=bg1

# pane border
set-option -g pane-active-border-style fg=colour250 #fg2
set-option -g pane-border-style fg=colour233 #bg1

# message infos
set-option -g message-style bg=colour235,fg=colour223 # bg=bg2, fg=fg1

# writing commands inactive
set-option -g message-command-style bg=colour235,fg=colour223 # bg=fg3, fg=bg1

# pane number display
set-option -g display-panes-active-colour colour250 #fg2
set-option -g display-panes-colour colour233 #bg1

# clock
set-window-option -g clock-mode-colour colour109 #blue

# belj
set-window-option -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg

## Theme settings mixed with colors (unfortunately, but there is no cleaner way)
set-option -g status-justify "left"
set-option -g status-left-style none
set-option -g status-left-length "80"
set-option -g status-right-style none
set-option -g status-right-length "80"
set-window-option -g window-status-separator ""

set-option -g status-left "#[bg=colour232,fg=colour15] #S #[bg=colour233,fg=colour232,nobold,noitalics,nounderscore]"
set-option -g status-right "#[bg=colour233,fg=colour234 nobold, nounderscore, noitalics]#[bg=colour234,fg=colour15] %Y-%m-%d #[bg=colour234,fg=colour233,nobold,noitalics,nounderscore]#[bg=colour233,fg=colour15,nobold,noitalics,nounderscore] %H:%M #[bg=colour233,fg=colour232,nobold,noitalics,nounderscore]#[bg=colour232,fg=colour15] #h "

set-window-option -g window-status-current-format "#[bg=colour52,fg=colour233,nobold,noitalics,nounderscore]#[bg=colour52,fg=colour15] #I:#[bg=colour52,fg=colour15,bold]#W#{?window_zoomed_flag,*Z,} #[bg=colour233,fg=colour52,nobold,noitalics,nounderscore]"
set-window-option -g window-status-format "#[bg=colour235,fg=colour233,noitalics]#[bg=colour235,fg=colour15] #I:#[bg=colour235,fg=colour15]#W #[bg=colour233,fg=colour235,noitalics]"

#################################
# Personal config
#################################

# General
set-option -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"
setw -g mode-keys vi
setw -g mouse on
set -g base-index 1
set -sg escape-time 0
set -s extended-keys on

# Undercurl
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Set prefix to Ctrl-Space
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# Reload config
bind-key r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# Use vim-like keys for splits and windows
bind-key v split-window -h
bind-key s split-window -v
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Keybinds
bind -r w last-window
bind-key / command-prompt -I "#W" "rename-window '%%'"
bind-key m command-prompt "move-window -t '%%'"
bind-key , select-layout even-horizontal
bind-key . select-layout even-vertical
bind-key < swap-window -t -1\; select-window -t -1
bind-key > swap-window -t +1\; select-window -t +1
bind-key C-o rotate-window
bind-key S choose-tree

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Plugins
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Plugin manager
run '~/.tmux/plugins/tpm/tpm'
